/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class de_m_marvin_electronflow_Solver */

#ifndef _Included_de_m_marvin_electronflow_Solver
#define _Included_de_m_marvin_electronflow_Solver
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     de_m_marvin_electronflow_Solver
 * Method:    initElectronFlow
 * Signature: (JLjava/util/function/Consumer;)I
 */
JNIEXPORT jint JNICALL Java_de_m_1marvin_electronflow_Solver_initElectronFlow
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     de_m_marvin_electronflow_Solver
 * Method:    detachElectronFlow
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_m_1marvin_electronflow_Solver_detachElectronFlow
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_m_marvin_electronflow_Solver
 * Method:    setLibName
 * Signature: (JLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_de_m_1marvin_electronflow_Solver_setLibName
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_m_marvin_electronflow_Solver
 * Method:    setLogger
 * Signature: (JLjava/util/function/Consumer;)I
 */
JNIEXPORT jint JNICALL Java_de_m_1marvin_electronflow_Solver_setLogger
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     de_m_marvin_electronflow_Solver
 * Method:    upload
 * Signature: (JLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_de_m_1marvin_electronflow_Solver_upload
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_m_marvin_electronflow_Solver
 * Method:    executeList
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_m_1marvin_electronflow_Solver_executeList
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_m_marvin_electronflow_Solver
 * Method:    execute
 * Signature: (JLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_de_m_1marvin_electronflow_Solver_execute
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     de_m_marvin_electronflow_Solver
 * Method:    printData
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_de_m_1marvin_electronflow_Solver_printData
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_m_marvin_electronflow_Solver
 * Method:    netFiltered
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_de_m_1marvin_electronflow_Solver_netFiltered
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
